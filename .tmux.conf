# Tmux Plugin Manager ----------------------------------------------------------
# https://github.com/tmux-plugins/tpm

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'


# Misc Settings ----------------------------------------------------------------

# shorten command delay
set -sg escape-time 2

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# prevent session names from being truncated
set -g status-left-length 40

# allow for really long buffer history
set-option -g history-limit 10000

# vi mode mutherfocker!
set-window-option -g mode-keys vi

# also mouse mode (squeak)
set -g mouse on

# make selecting text with mouse copy to clipboard
set-option -s set-clipboard off
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i"

# Use C-Space for global prefix
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix


# Modal Commands ---------------------------------------------------------------

# Alt-Space enters tmux command mode, and Esc exits it.
# https://alexherbo2.github.io/config/tmux/make-tmux-modal (modified)

# set-option -g prefix None
bind-key -n M-Space {
  set-option key-table modal
  set-option status-bg '#645851'
}

bind-key -T modal Escape {
  set-option key-table root
  set-option status-bg default
}

# restore root table on detach.
set-hook -g client-detached[0] 'set-option key-table root'
set-hook -g client-detached[1] 'set-option status-bg default'


# Key Bindings "modal" ---------------------------------------------------------

# key bindings here are part of the custom "modal" key-table

# number keys select-or-create a window
bind-key -n -T modal 1 if-shell "tmux select-window -t :1" "" "new-window -t :1"
bind-key -n -T modal 2 if-shell "tmux select-window -t :2" "" "new-window -t :2"
bind-key -n -T modal 3 if-shell "tmux select-window -t :3" "" "new-window -t :3"
bind-key -n -T modal 4 if-shell "tmux select-window -t :4" "" "new-window -t :4"
bind-key -n -T modal 5 if-shell "tmux select-window -t :5" "" "new-window -t :5"
bind-key -n -T modal 6 if-shell "tmux select-window -t :6" "" "new-window -t :6"
bind-key -n -T modal 7 if-shell "tmux select-window -t :7" "" "new-window -t :7"
bind-key -n -T modal 8 if-shell "tmux select-window -t :8" "" "new-window -t :8"
bind-key -n -T modal 9 if-shell "tmux select-window -t :9" "" "new-window -t :9"

bind-key -n -T modal 0 choose-tree -s

bind-key -n -T modal s split-window -h
bind-key -n -T modal v split-window -v

bind-key -n -T modal : command-prompt

bind-key -n -T modal h resize-pane -L 8
bind-key -n -T modal H resize-pane -D 8
bind-key -n -T modal l resize-pane -R 8
bind-key -n -T modal L resize-pane -U 8

bind-key -n -T modal j select-pane -t :.+
bind-key -n -T modal k select-pane -t :.-

bind-key -n -T modal x kill-pane


# Key Bindings -----------------------------------------------------------------

bind-key -n C-k send-keys -R \; clear-history
bind-key -n C-n new-session \; command-prompt -I "#S" "rename-session '%%'"
bind-key -n C-t new-window -c '#{pane_current_path}' # new tab with same path as invoking window
bind-key -n C-w kill-window \; movew -r # kill current window/tab and re-order the numbers
bind-key -n C-x confirm kill-session
bind-key -n C-: command-prompt
bind-key -n C-g set status

# Quickly travel between editor and terminal windows
bind-key -n C-Right select-window -t 2 \; send-keys -t 2 Up
bind-key -n C-Left select-window -t 1

# Alacritty terminal is set to translate C-<n> into M-<n>,
# because terminal emulators are bad at supporting C-<n> directly.
bind-key -n M-0 choose-tree -s
bind-key -n M-1 select-window -t :=1
bind-key -n M-2 select-window -t :=2
bind-key -n M-3 select-window -t :=3
bind-key -n M-4 select-window -t :=4
bind-key -n M-5 select-window -t :=5
bind-key -n M-6 select-window -t :=6
bind-key -n M-7 select-window -t :=7
bind-key -n M-8 select-window -t :=8
bind-key -n M-9 select-window -t :=9


# Key Bindings (kakoune branch) ------------------------------------------------

# alt-shift-<window-number>
# Select or create the window by number.
# Binding to shift means using the symbol keys instead of their number values.
# bind-key -n M-! if-shell "tmux select-window -t :1" "" "new-window -t :1"
# bind-key -n M-@ if-shell "tmux select-window -t :2" "" "new-window -t :2"
# bind-key -n M-# if-shell "tmux select-window -t :3" "" "new-window -t :3"
# bind-key -n M-$ if-shell "tmux select-window -t :4" "" "new-window -t :4"
# bind-key -n M-% if-shell "tmux select-window -t :5" "" "new-window -t :5"
# bind-key -n M-^ if-shell "tmux select-window -t :6" "" "new-window -t :6"
# bind-key -n M-& if-shell "tmux select-window -t :7" "" "new-window -t :7"
# bind-key -n M-* if-shell "tmux select-window -t :8" "" "new-window -t :8"
# bind-key -n M-( if-shell "tmux select-window -t :9" "" "new-window -t :9"
#
# # alt-shift-0 shows tree
# bind-key -n M-) choose-tree -s
#
# bind-key -n M-: command-prompt
#
# # alt-shift-s split horizontally
# bind-key -n M-S split-window -h
#
# # alt-shift-v split vertically
# bind-key -n M-V split-window


# Status Line ------------------------------------------------------------------

set-option -g status-position top

set -g status-bg default
set -g status-fg white

set-window-option -g status-left " #S "
set-window-option -g status-left-style fg=magenta,bg=default

# set-window-option -g status-right "#(derps-per-hour) derps-per-hour %l:%M %p"

# display the current table-prefix (mode) in the status line.
set-window-option -g status-right "#{?#{!=:#{client_key_table},root},[#{client_key_table}] ,}"
set-window-option -g status-right-style fg=black

set-window-option -g window-status-current-format " #I:[#W] "
set-window-option -g window-status-current-style fg=white,bg=default
set-window-option -g window-status-format " #I:[#W] "
set-window-option -g window-status-style fg=black,bg=default


# Colors -----------------------------------------------------------------------

set -g pane-border-style bg='#645851'
set -g pane-active-border-style fg='#d8af8e',bg='#a57b55'


# Arcana -----------------------------------------------------------------------

# make tmux display things in 256 colors
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",screen-256color:Tc"

# incantation to allow neovim to send guicursor changes
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
